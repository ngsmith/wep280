% verify that the RWTH - Mindstorms NXT toolbox is installed.
if verLessThan('RWTHMindstormsNXT', '3.00');
    error(strcat('This program requires the RWTH - Mindstorms NXT Toolbox ' ...
        ,'version 3.00 or greater. Go to http://www.mindstorms.rwth-aachen.de ' ...
        ,'and follow the installation instructions!'));
end


%% Clear and close
%COM_CloseNXT all
close all


%% Open Bluetooth connetion
%h = COM_OpenNXT('bluetooth32.ini');
%h =COM_OpenNXTEx('Any', '00:16:53:18:80:b3', 'bluetooth_next2.ini');
COM_SetDefaultNXT(h);    

scanPower = 30;

sonarMotor = NXTMotor(MOTOR_A);
sonarMotor.ResetPosition();
ULTRASONIC_SENSOR_PORT = 3;
OpenUltrasonic( ULTRASONIC_SENSOR_PORT );

% sonarMotorCCW.SpeedRegulation   = false;  % not for sync mode
% sonarMotorCCW.TachoLimit        = 90 * ;
% sonarMotor.SmoothStart       = true;
% sonarMotor.Power=10;
% sonarMotor.SendToNXT();
% sonarMotor.WaitFor();

sonarMotor.Power=-10;
sonarMotor.TachoLimit=0;
sonarMotor.SendToNXT();
sonarMotor.SmoothStart = true;

done = false;
sonarReadings = [;];
while size(sonarReadings,1) < 30;
    motorInfo = sonarMotor.ReadFromNXT();
    if( motorInfo.Position > 90 )
      sonarMotor.Power=-10;
      sonarMotor.SendToNXT();
    end
    if( motorInfo.Position < -90 )
      sonarMotor.Power=10;
      sonarMotor.SendToNXT();
    end
    motorInfo.Position;
    distance = GetUltrasonic( ULTRASONIC_SENSOR_PORT );
    reading = [distance motorInfo.Position]
    sonarReadings(end+1,:) = reading;
end
sonarMotor.Stop('OFF');

    